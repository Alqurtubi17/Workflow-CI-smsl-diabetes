name: CI - Train & Deploy Model

on:
  push:
    paths:
      - "MLProject/**"
      - ".github/workflows/**"

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Check Env
      run: |
        python --version
        pip list

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run MLflow Project
      working-directory: MLProject
      run: |
        mlflow run . --env-manager=local -P data_path=diabetes_preprocessing.csv

    - name: Get latest MLflow run_id
      run: |
        latest_run_id=$(mlflow runs list --order-by "start_time desc" --limit 1 --experiment-id 0 | tail -n 1 | awk '{print $1}')
        echo "latest_run_id=${latest_run_id}" >> $GITHUB_ENV

    - name: Install additional Python dependencies
      run: |
        pip install mlflow

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/diabetes-ml-ci:latest -f MLProject/Dockerfile .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag Docker Image
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/diabetes-ml-ci:latest ${{ secrets.DOCKER_USERNAME }}/diabetes-ml-ci:${GITHUB_SHA}

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/diabetes-ml-ci:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/diabetes-ml-ci:${GITHUB_SHA}

    - name: Copy model to artifacts
      run: |
        mkdir -p artifacts
        cp MLProject/model.pkl artifacts/

    - name: Upload model as GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: "Model Release ${{ github.run_number }}"
        files: artifacts/model.pkl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install rclone
      run: |
        curl https://rclone.org/install.sh | sudo bash

    - name: Setup rclone config
      run: |
        mkdir -p ~/.config/rclone
        echo "${{ secrets.RCLONE_CONF }}" > ~/.config/rclone/rclone.conf

    - name: Upload to Google Drive
      run: |
        rclone copy ./artifacts/model.pkl gdrive:mlflow-artifacts/ --progress
        
    - name: Post Action Log
      run: echo "CI pipeline selesai!"